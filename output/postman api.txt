pm.info 如何获取request名称 => pm.info.requestName:String
pm.info 如何获取iteration 序号 => pm.info.iteration:Number
pm.info 如何获取iteration总数 => pm.info.iterationCount
本地变量的前3个字母=>vari
本地变量的后续=>iable
本地变量后是否有s=>是
环境变量的前3个字母=>env
环境变量的中间4个字母=>iron
环境变量的后4个字母=>ment
环境变量是否加s=>否
集合变量使用的前缀是什么=>collection
集合变量的后缀是什么=>本地变量名(Variables)
全局变量后是否要加s=>是
全局变量前缀是什么=>glo
全局变量后缀是什么=>bal
变量的基础方法=>get(k),set(k, v),toObject()
变量是否有某个k的方法 =>has(k)
环境变量的独特属性=>name
环境、全局、集合的特有方法=>unset(k),clear()
如何看request的url => pm.request.url
如何看request的头是否要加s => 是
如何看request的body => pm.request.body
如何增加headers=>pm.headers.add(标名)
如何删除headers=>pm.headers.remove(标名)
如何更新爱pm.headers后用的是什么=>upsert
response上有哪几个属性 => 返回码,返回状态，响应时间，返回数据大小
response返回码代码=>code
response返回状态代码=>status
response返回大小代码是什么=>responseSize:number
response方法有哪2个=>返回文本，返回json
response返回数据文本的代码=>text()
response返回数据json是属性还是方法=>方法
response返回数据json的代码=>json()
pm.iterationData基本方法=>get(k),set(k,v),toObject()
pm.iterationData是否有toJSON()=>是
pm.iterationData变成JSON=>toJSON()
pm.iterationData是否存在clear方法=>是
pm.iterationData清除数据=>clear()
pm.iterationData是否存在unset方法=>是
pm.iterationData清除某一项数据=>unset(k)
pm.iterationData是否存在输入批量数据方法=>是
pm.iterationData输入批量数据=>addLayer(list: VariableList)
    setTimeout(() => {
pm.test的使用方法=>('信息',function(){code})
    setTimeout(() => {
pm.response.to.have判断状态=>status(code:Number/reason:String)
pm.response.to.have判断头信息是否有某个信息=>header(k[,v])
pm.response.to.have判断内容=>body([v:str/v:re])
pm.response.to.have判断json内容=>jsonBody([Object/k[,v]])
pm.response.to.have通过模板判断=>jsonSchema(schema:Object)
pm.response.to.be(success, ok, accepted) => 2XX, 200, 202
pm.response.to.be(info, redirection) => 1XX, 3XX
pm.response.to.be(2XX,200,202) => success, ok, accepted
pm.response.to.be(1XX, 3XX) => info, redirection
pm.response.to.be(clientError, badRequest, unauthorized, forbidden, notFound, rateLimited)=>4XX, 400, 401, 403, 404, 429
pm.response.to.be(serverError, error) => 5XX, 4XX OR 5XX
pm.response.to.be(4XX, 400, 401, 403, 404, 429)=>clientError, badRequest, unauthorized, forbidden, notFound, rateLimited
pm.response.to.be(5XX, 4XX OR 5XX) => serverError, error
